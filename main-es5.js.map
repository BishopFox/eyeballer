{"version":3,"sources":["webpack:///node-fetch (ignored)","webpack:///util (ignored)","webpack:///crypto (ignored)","webpack:///string_decoder (ignored)","webpack:///fs (ignored)","webpack:///src/app/base-materials.ts","webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/eyeballer/eyeballer.component.html","webpack:///src/app/components/eyeballer/eyeballer.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["modules","BaseMaterialModule","environment","production","AppComponent","title","AppModule","EyeballerComponent","offset","images","Map","confidence","width","height","tfFilesCompleted","tfFiles","imageCount","loadedCount","finishedLoading","eyeballing","eyeballCompleted","eyeballedCount","classifications","custom404","loginPage","webapp","oldLooking","parked","selected","selectedScreens","fetchTfFiles","event","console","log","addedFiles","length","Promise","all","map","file","dataURI","dataString","set","name","key","includes","fetch","resp","json","manifest","paths","Array","from","weightsManifest","blob","push","File","path","fetchTfFile","tfFile","base","split","reverse","eyeballScan","updateSelections","selectedScreensSet","Set","entry","add","selectionsArray","tempArray","filter","value","browserFiles","model","keys","classifyImage","img","Image","src","get","onload","tensor","fromPixels","resizeNearestNeighbor","toFloat","sub","div","expandDims","predictions","predict","dataSync","arrayBuffer","buf","ext","toLocaleLowerCase","some","allow","encodeURIComponent","size","window","location","reload","str","join","Blob","type","url","URL","createObjectURL","open","restart","routes","component","AppRoutingModule","forRoot","relativeLinkResolution","bootstrapModule","err","error","webpackEmptyAsyncContext","req","resolve","then","e","Error","code","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/*\n  Electric Scan\n  Copyright (C) 2019  Bishop Fox\n\n  This program is free software; you can redistribute it and/or\n  modify it under the terms of the GNU General Public License\n  as published by the Free Software Foundation; either version 2\n  of the License, or (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program; if not, write to the Free Software\n  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport { NgModule } from '@angular/core';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\nconst modules = [\n  MatButtonModule, MatCheckboxModule, MatOptionModule, MatSelectModule, MatMenuModule, MatTabsModule,\n  MatFormFieldModule, MatTooltipModule, MatToolbarModule, MatIconModule, MatProgressSpinnerModule,\n  MatDialogModule, MatGridListModule, MatCardModule, MatTableModule, MatSortModule, MatInputModule,\n  MatSnackBarModule, MatSlideToggleModule, MatDividerModule, MatProgressBarModule, MatBadgeModule,\n  MatSidenavModule, MatExpansionModule\n];\n\n@NgModule({\n  imports: modules,\n  exports: modules,\n})\nexport class BaseMaterialModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'weballer';\n}\n","<router-outlet>\n<router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxDropzoneModule } from 'ngx-dropzone';\n\nimport { BaseMaterialModule } from './base-materials';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EyeballerComponent } from './components/eyeballer/eyeballer.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EyeballerComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgxDropzoneModule,\n    BrowserAnimationsModule,\n    BaseMaterialModule,\n    FlexLayoutModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<mat-toolbar class=\"app-toolbar\" color=\"primary\"  fxLayout=\"row\" fxLayoutAlign=\"start center\">\n  <h2>\n    <i class=\"fas fa-eye fa-fw\"></i>\n    Eyeballer\n  </h2>\n\n  <span fxFlex></span>\n\n  <button mat-raised-button  (click)=\"restart()\">\n    <i class=\"fas fa-fw fa-undo\"></i>\n    Restart\n  </button>\n\n</mat-toolbar>\n\n<!-- Model Loading Progress -->\n<div *ngIf=\"!tfFilesCompleted\">\n  <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</div>\n\n<!-- Drop Zone -->\n<div *ngIf=\"tfFilesCompleted && !eyeballing && !eyeballCompleted\">\n  <mat-card>\n\n    <button mat-raised-button (click)=\"startEyeball()\">\n      Start\n    </button>\n\n    <br />\n    <br />\n\n    <ngx-dropzone (change)=\"onSelect($event)\">\n      <ngx-dropzone-label>\n        Files dropped here are <span style=\"font-weight: bold\">not uploaded anywhere.</span> No data leaves your computer at all on this tool.\n      </ngx-dropzone-label>\n    </ngx-dropzone>\n  </mat-card>\n\n  <br />\n\n  <mat-card><span style=\"font-weight: bold\">Note:</span> For best results,\n    ensure your screenshots are taken natively in a <span style=\"font-weight: bold\">16:10 aspect ratio.</span> (ie: 1440x900 or other)</mat-card>\n</div>\n\n<!-- Progress Bar -->\n<div *ngIf=\"tfFilesCompleted && eyeballing && !eyeballCompleted\">\n  <mat-card>\n    <h3>Loading Images: {{this.images.size}} of {{this.imageCount}}</h3>\n    <mat-progress-bar mode=\"determinate\" [value]=\"loadPercent()\"></mat-progress-bar>\n  </mat-card>\n  <mat-card>\n    <h3>Classifying: {{this.eyeballedCount}} of {{this.imageCount}}</h3>\n    <mat-progress-bar mode=\"determinate\" [value]=\"eyeballPercent()\"></mat-progress-bar>\n  </mat-card>\n  <mat-card>\n    This processing is happening in your browser. <span style=\"font-weight: bold\">There is no backend.</span>\n  </mat-card>\n</div>\n\n<!-- Results -->\n<div *ngIf=\"tfFilesCompleted && !eyeballing && eyeballCompleted\">\n  <div class=\"results-container\">\n    <h2>Results</h2>\n    <div>\n      <div>\n        <button class=\"include-button\" mat-raised-button [disabled]=\"selected.webapp === 0\" (click)=\"selected.webapp = 0; updateSelections()\">Must Include</button>\n        <button mat-raised-button [disabled]=\"selected.webapp === 1\" (click)=\"selected.webapp = 1; updateSelections()\">Webapp</button>\n        <button class=\"reject-button\" mat-raised-button [disabled]=\"selected.webapp === 2\" (click)=\"selected.webapp = 2; updateSelections()\">Never Include</button>\n        <label class=\"label-count\">{{ classifications.webapp.length }}</label>\n      </div>\n      <div>\n        <button class=\"include-button\" mat-raised-button [disabled]=\"selected.oldLooking === 0\" (click)=\"selected.oldLooking = 0; updateSelections()\">Must Include</button>\n        <button mat-raised-button [disabled]=\"selected.oldLooking === 1\" (click)=\"selected.oldLooking = 1; updateSelections()\">Old Looking</button>\n        <button class=\"reject-button\" mat-raised-button [disabled]=\"selected.oldLooking === 2\" (click)=\"selected.oldLooking = 2; updateSelections()\">Never Include</button>\n        <label class=\"label-count\">{{ classifications.oldLooking.length }}</label>\n      </div>\n      <div>\n        <button class=\"include-button\" mat-raised-button [disabled]=\"selected.loginPage === 0\" (click)=\"selected.loginPage = 0; updateSelections()\">Must Include</button>\n        <button mat-raised-button [disabled]=\"selected.loginPage === 1\" (click)=\"selected.loginPage = 1; updateSelections()\">Login Page</button>\n        <button class=\"reject-button\" mat-raised-button [disabled]=\"selected.loginPage === 2\" (click)=\"selected.loginPage = 2; updateSelections()\">Never Include</button>\n        <label class=\"label-count\">{{ classifications.loginPage.length }}</label>\n      </div>\n      <div>\n        <button class=\"include-button\" mat-raised-button [disabled]=\"selected.custom404 === 0\" (click)=\"selected.custom404 = 0; updateSelections()\">Must Include</button>\n        <button mat-raised-button [disabled]=\"selected.custom404 === 1\" (click)=\"selected.custom404 = 1; updateSelections()\">Custom 404</button>\n        <button class=\"reject-button\" mat-raised-button [disabled]=\"selected.custom404 === 2\" (click)=\"selected.custom404 = 2; updateSelections()\">Never Include</button>\n        <label class=\"label-count\">{{ classifications.custom404.length }}</label>\n      </div>\n      <div>\n        <button class=\"include-button\" mat-raised-button [disabled]=\"selected.parked === 0\" (click)=\"selected.parked = 0; updateSelections()\">Must Include</button>\n        <button mat-raised-button [disabled]=\"selected.parked === 1\" (click)=\"selected.parked = 1; updateSelections()\">Parked Domain</button>\n        <button class=\"reject-button\" mat-raised-button [disabled]=\"selected.parked === 2\" (click)=\"selected.parked = 2; updateSelections()\">Never Include</button>\n        <label class=\"label-count\">{{ classifications.parked.length }}</label>\n      </div>\n    </div>\n\n    <button mat-raised-button (click)=\"exportResults()\">\n      Export\n    </button>\n    Total Selected: {{ selectedScreens.length }}\n\n    <div>\n      Preview:\n    </div>\n\n    <div class=\"eyeballed-class-container\">\n      <div *ngFor=\"let key of selectedScreens.slice(0, 8); let index = index\" [attr.data-index]=\"index\">\n        <mat-card class=\"result-card\">\n          <mat-card-header>\n            <mat-card-title>\n                {{ key }}\n            </mat-card-title>\n          </mat-card-header>\n          <img class=\"preview-image\" style=\"width:100%;\" mat-card-image src=\"{{images.get(key)}}\">\n          <span class=\"webapp-label\">{{ isWebapp(key) }}</span>\n          <span class=\"custom-404-label\">{{ isCustom404(key) }}</span>\n          <span class=\"login-label\">{{ isLoginPage(key) }}</span>\n          <span class=\"old-looking-label\">{{ isOldLooking(key) }}</span>\n          <span class=\"parked-label\">{{ isParked(key) }}</span>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport * as base64 from 'base64-arraybuffer';\nimport * as tf from '@tensorflow/tfjs';\n\n\n@Component({\n  selector: 'app-eyeballer',\n  templateUrl: './eyeballer.component.html',\n  styleUrls: ['./eyeballer.component.scss']\n})\nexport class EyeballerComponent implements OnInit {\n\n  offset = tf.scalar(127.5);\n  images = new Map<string, string>();\n  confidence = 0.6;\n\n  width = 224;\n  height = 224;\n\n  tfFilesCompleted = false;\n  tfFiles: File[] = [];\n\n  imageCount = 0;\n  loadedCount = 0;\n  finishedLoading = false;\n  eyeballing = false;\n  eyeballCompleted = false;\n  eyeballedCount = 0;\n  classifications = {\n    custom404: [],\n    loginPage: [],\n    webapp: [],\n    oldLooking: [],\n    parked: [],\n  };\n\n  // What labels are selected?\n  // This is a tri-state:\n  //  0 means \"always select\"\n  //  1 means \"don't care\"\n  //  2 means \"never select\"\n  selected = {\n    custom404: 2,\n    loginPage: 1,\n    webapp: 0,\n    oldLooking: 1,\n    parked: 2,\n  }\n\n  selectedScreens: string[] = [];\n\n  constructor() {}\n\n  ngOnInit() {\n    this.fetchTfFiles();\n  }\n\n  async onSelect(event) {\n    console.log(event);\n    this.imageCount = event.addedFiles.length;\n    await Promise.all(event.addedFiles.map(async (file) => {\n      const dataString = await this.dataURI(file);\n      this.images.set(file.name, dataString);\n    }));\n  }\n\n  onRemove(event) {\n    this.images.delete(event.name);\n  }\n\n  isWebapp(key) {\n    if(this.classifications.webapp.includes(key)) {\n      return \"Webapp\"\n    }\n    return \"\"\n  }\n  isCustom404(key) {\n    if(this.classifications.custom404.includes(key)) {\n      return \"Custom 404\"\n    }\n    return \"\"\n  }\n  isLoginPage(key) {\n    if(this.classifications.loginPage.includes(key)) {\n      return \"Login Page\"\n    }\n    return \"\"\n  }\n  isOldLooking(key) {\n    if(this.classifications.oldLooking.includes(key)) {\n      return \"Old Looking\"\n    }\n    return \"\"\n  }\n  isParked(key) {\n    if(this.classifications.parked.includes(key)) {\n      return \"Parked Domain\"\n    }\n    return \"\"\n  }\n\n  async fetchTfFiles() {\n    let resp = await fetch('/assets/tf/model.json');\n    const manifest = await resp.json();\n    const paths: string[] = Array.from(manifest.weightsManifest[0]?.paths);\n\n    this.tfFiles = [];\n    resp = await fetch('/assets/tf/model.json');\n    const blob = await resp.blob();\n    this.tfFiles.push(new File([blob], 'model.json'));\n    await Promise.all(paths.map(async (path) => {\n      const tfFile = await this.fetchTfFile(path);\n      this.tfFiles.push(tfFile);\n    }));\n    this.tfFilesCompleted = true;\n  }\n\n  async fetchTfFile(name: string): Promise<File> {\n    const base = name.split('/').reverse()[0];\n    const resp = await fetch(`/assets/tf/${base}`);\n    const blob = await resp.blob();\n    return new File([blob], base);\n  }\n\n  async startEyeball() {\n    await this.eyeballScan();\n    await this.updateSelections();\n    console.log(this.classifications);\n  }\n\n  async updateSelections() {\n    // First thing: load up all the images into the set\n    let selectedScreensSet = new Set([]);\n    for (let entry of this.classifications.webapp) {\n      selectedScreensSet.add(entry);\n    }\n    for (let entry of this.classifications.oldLooking) {\n      selectedScreensSet.add(entry);\n    }\n    for (let entry of this.classifications.loginPage) {\n      selectedScreensSet.add(entry);\n    }\n    for (let entry of this.classifications.custom404) {\n      selectedScreensSet.add(entry);\n    }\n    for (let entry of this.classifications.parked) {\n      selectedScreensSet.add(entry);\n    }\n    let selectionsArray = Array.from(selectedScreensSet);\n\n    // Calculate intersections for each \"must include\" selections\n    if (this.selected.webapp === 0){\n      let tempArray = selectionsArray.filter(value => this.classifications.webapp.includes(value));\n      selectionsArray = tempArray;\n    }\n    if (this.selected.oldLooking === 0){\n      let tempArray = selectionsArray.filter(value => this.classifications.oldLooking.includes(value));\n      selectionsArray = tempArray;\n    }\n    if (this.selected.loginPage === 0){\n      let tempArray = selectionsArray.filter(value => this.classifications.loginPage.includes(value));\n      selectionsArray = tempArray;\n    }\n    if (this.selected.custom404 === 0){\n      let tempArray = selectionsArray.filter(value => this.classifications.custom404.includes(value));\n      selectionsArray = tempArray;\n    }\n    if (this.selected.parked === 0){\n      let tempArray = selectionsArray.filter(value => this.classifications.parked.includes(value));\n      selectionsArray = tempArray;\n    }\n\n    // Now remove any \"Must not include\" selection\n    selectedScreensSet = new Set(selectionsArray);\n    if (this.selected.webapp === 2){\n      for (let entry of this.classifications.webapp) {\n        selectedScreensSet.delete(entry);\n      }\n    }\n    if (this.selected.oldLooking === 2){\n      for (let entry of this.classifications.oldLooking) {\n        selectedScreensSet.delete(entry);\n      }\n    }\n    if (this.selected.loginPage === 2){\n      for (let entry of this.classifications.loginPage) {\n        selectedScreensSet.delete(entry);\n      }\n    }\n    if (this.selected.custom404 === 2){\n      for (let entry of this.classifications.custom404) {\n        selectedScreensSet.delete(entry);\n      }\n    }\n    if (this.selected.parked === 2){\n      for (let entry of this.classifications.parked) {\n        selectedScreensSet.delete(entry);\n      }\n    }\n    this.selectedScreens = Array.from(selectedScreensSet);\n  }\n\n  async eyeballScan(): Promise<void> {\n    console.log('eyeballing ...');\n    this.eyeballing = true;\n    const model = await tf.loadLayersModel(tf.io.browserFiles(this.tfFiles));\n    const keys = Array.from(this.images.keys());\n    await Promise.all(keys.map(async (key) => {\n      await this.classifyImage(key, model);\n    }));\n  }\n\n  async classifyImage(key: string, model: tf.LayersModel) {\n    const img = new Image(this.width, this.height);\n    img.src = this.images.get(key);\n    console.log(\"Queued up image: \" + key)\n    this.loadedCount++;\n    img.onload = () => {\n      console.log(`classifying: ${key}`);\n      const tensor = tf.browser.fromPixels(img)\n        .resizeNearestNeighbor([224, 224])\n        .toFloat()\n        .sub(this.offset)\n        .div(this.offset)\n        .expandDims();\n      const predictions = (<tf.Tensor<tf.Rank>> model.predict(tensor)).dataSync();\n      console.log(`${predictions}`);\n      if (predictions[0] > this.confidence) {\n        console.log(`Custom 404: ${key}`);\n        this.classifications.custom404.push(key);\n      }\n      if (predictions[1] > this.confidence) {\n        console.log(`Login Page: ${key}`);\n        this.classifications.loginPage.push(key);\n      }\n      if (predictions[2] > this.confidence) {\n        console.log(`webapp: ${key}`);\n        this.classifications.webapp.push(key);\n      }\n      if (predictions[3] > this.confidence) {\n        console.log(`Old Looking: ${key}`);\n        this.classifications.oldLooking.push(key);\n      }\n      if (predictions[4] > this.confidence) {\n        console.log(`Parked: ${key}`);\n        this.classifications.parked.push(key);\n      }\n      this.eyeballedCount++;\n\n      if (this.eyeballedCount >= this.imageCount) {\n        console.log('eyeballed all images');\n        this.eyeballing = false;\n        this.eyeballCompleted = true;\n        this.updateSelections();\n      }\n    };\n  }\n\n  async dataURI(file: File): Promise<string> {\n    const buf = await file.arrayBuffer();\n    let ext = file.name.split('.').reverse()[0]?.toLocaleLowerCase();\n    if (![\"jpg\", \"jpeg\", \"png\", \"gif\", \"bmp\"].some(allow => allow === ext)) {\n      console.log(`Unknown file type ${ext}, defaulting to jpg`);\n      ext = \"jpg\";\n    }\n    return `data:image/${encodeURIComponent(ext)};base64,${base64.encode(buf)}`;\n  }\n\n  eyeballPercent() {\n    return (this.eyeballedCount / this.imageCount) * 100;\n  }\n\n  loadPercent() {\n    return (this.images.size / this.imageCount) * 100;\n  }\n\n  restart() {\n    window.location.reload();\n  }\n\n  async exportResults() {\n    const str = this.selectedScreens.join(\"\\n\");\n    const blob = new Blob([str], { type: 'text/csv' });\n    const url= window.URL.createObjectURL(blob);\n    window.open(url);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EyeballerComponent } from './components/eyeballer/eyeballer.component';\n\nconst routes: Routes = [\n  { path: '', component: EyeballerComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}